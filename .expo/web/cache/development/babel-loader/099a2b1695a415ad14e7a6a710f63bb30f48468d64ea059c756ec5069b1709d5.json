{"ast":null,"code":"import { addEventListener } from '../addEventListener';\nimport useLayoutEffect from '../useLayoutEffect';\nimport useStable from '../useStable';\nexport default function useEvent(eventType, options) {\n  var targetListeners = useStable(() => new Map());\n  var addListener = useStable(() => {\n    return (target, callback) => {\n      var removeTargetListener = targetListeners.get(target);\n      if (removeTargetListener != null) {\n        removeTargetListener();\n      }\n      if (callback == null) {\n        targetListeners.delete(target);\n        callback = () => {};\n      }\n      var removeEventListener = addEventListener(target, eventType, callback, options);\n      targetListeners.set(target, removeEventListener);\n      return removeEventListener;\n    };\n  });\n  useLayoutEffect(() => {\n    return () => {\n      targetListeners.forEach(removeListener => {\n        removeListener();\n      });\n      targetListeners.clear();\n    };\n  }, [targetListeners]);\n  return addListener;\n}","map":{"version":3,"names":["addEventListener","useLayoutEffect","useStable","useEvent","eventType","options","targetListeners","Map","addListener","target","callback","removeTargetListener","get","delete","removeEventListener","set","forEach","removeListener","clear"],"sources":["C:/Users/thiago.attico/source/repos/conecta/node_modules/react-native-web/dist/modules/useEvent/index.js"],"sourcesContent":["/**\r\n * Copyright (c) Meta Platforms, Inc. and affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * \r\n */\r\n\r\nimport { addEventListener } from '../addEventListener';\r\nimport useLayoutEffect from '../useLayoutEffect';\r\nimport useStable from '../useStable';\r\n/**\r\n * This can be used with any event type include custom events.\r\n *\r\n * const click = useEvent('click', options);\r\n * useEffect(() => {\r\n *   click.setListener(target, onClick);\r\n *   return () => click.clear();\r\n * }).\r\n */\r\nexport default function useEvent(eventType, options) {\r\n  var targetListeners = useStable(() => new Map());\r\n  var addListener = useStable(() => {\r\n    return (target, callback) => {\r\n      var removeTargetListener = targetListeners.get(target);\r\n      if (removeTargetListener != null) {\r\n        removeTargetListener();\r\n      }\r\n      if (callback == null) {\r\n        targetListeners.delete(target);\r\n        callback = () => {};\r\n      }\r\n      var removeEventListener = addEventListener(target, eventType, callback, options);\r\n      targetListeners.set(target, removeEventListener);\r\n      return removeEventListener;\r\n    };\r\n  });\r\n  useLayoutEffect(() => {\r\n    return () => {\r\n      targetListeners.forEach(removeListener => {\r\n        removeListener();\r\n      });\r\n      targetListeners.clear();\r\n    };\r\n  }, [targetListeners]);\r\n  return addListener;\r\n}"],"mappings":"AASA,SAASA,gBAAgB,QAAQ,qBAAqB;AACtD,OAAOC,eAAe,MAAM,oBAAoB;AAChD,OAAOC,SAAS,MAAM,cAAc;AAUpC,eAAe,SAASC,QAAQA,CAACC,SAAS,EAAEC,OAAO,EAAE;EACnD,IAAIC,eAAe,GAAGJ,SAAS,CAAC,MAAM,IAAIK,GAAG,CAAC,CAAC,CAAC;EAChD,IAAIC,WAAW,GAAGN,SAAS,CAAC,MAAM;IAChC,OAAO,CAACO,MAAM,EAAEC,QAAQ,KAAK;MAC3B,IAAIC,oBAAoB,GAAGL,eAAe,CAACM,GAAG,CAACH,MAAM,CAAC;MACtD,IAAIE,oBAAoB,IAAI,IAAI,EAAE;QAChCA,oBAAoB,CAAC,CAAC;MACxB;MACA,IAAID,QAAQ,IAAI,IAAI,EAAE;QACpBJ,eAAe,CAACO,MAAM,CAACJ,MAAM,CAAC;QAC9BC,QAAQ,GAAGA,CAAA,KAAM,CAAC,CAAC;MACrB;MACA,IAAII,mBAAmB,GAAGd,gBAAgB,CAACS,MAAM,EAAEL,SAAS,EAAEM,QAAQ,EAAEL,OAAO,CAAC;MAChFC,eAAe,CAACS,GAAG,CAACN,MAAM,EAAEK,mBAAmB,CAAC;MAChD,OAAOA,mBAAmB;IAC5B,CAAC;EACH,CAAC,CAAC;EACFb,eAAe,CAAC,MAAM;IACpB,OAAO,MAAM;MACXK,eAAe,CAACU,OAAO,CAACC,cAAc,IAAI;QACxCA,cAAc,CAAC,CAAC;MAClB,CAAC,CAAC;MACFX,eAAe,CAACY,KAAK,CAAC,CAAC;IACzB,CAAC;EACH,CAAC,EAAE,CAACZ,eAAe,CAAC,CAAC;EACrB,OAAOE,WAAW;AACpB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}