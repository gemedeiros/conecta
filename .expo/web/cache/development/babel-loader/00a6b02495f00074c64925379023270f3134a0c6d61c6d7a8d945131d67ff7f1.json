{"ast":null,"code":"import * as React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { useNavigation } from '@react-navigation/native';\nimport { LinearGradient } from 'expo-linear-gradient';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar data = [{\n  id: 1,\n  title: 'Castilho - SP',\n  description: 'Descrição Castilho',\n  imageUrl: require(\"./assets/images/comerc.png\"),\n  logoUrl: require(\"./assets/images/castilho.jpg\"),\n  screen: 'DetalhesCastilho'\n}, {\n  id: 2,\n  title: 'São Paulo - SP',\n  description: 'Descrição São Paulo',\n  imageUrl: require(\"./assets/images/comerc.png\"),\n  logoUrl: require(\"./assets/images/saopaulo.jpg\"),\n  screen: 'DetalhesSaoPaulo'\n}];\nexport function TourismDetailsScreen() {\n  var navigation = useNavigation();\n  var handleCardPress = function handleCardPress(screen) {\n    navigation.navigate(screen);\n  };\n  return _jsx(LinearGradient, {\n    colors: ['#003293', '#00134d', '#3f1048'],\n    style: styles.backgroundGradient,\n    children: _jsx(View, {\n      style: styles.container,\n      children: _jsx(ScrollView, {\n        contentContainerStyle: styles.scrollContainer,\n        children: data.map(function (item) {\n          return _jsxs(TouchableOpacity, {\n            style: styles.card,\n            onPress: function onPress() {\n              return handleCardPress(item.screen);\n            },\n            children: [_jsx(View, {\n              style: styles.leftColumn,\n              children: _jsx(Image, {\n                source: item.logoUrl,\n                style: styles.logo\n              })\n            }), _jsxs(View, {\n              style: styles.rightColumn,\n              children: [_jsx(Text, {\n                style: styles.title,\n                children: item.title\n              }), _jsx(Image, {\n                source: item.imageUrl,\n                style: styles.image,\n                resizeMode: \"contain\"\n              })]\n            })]\n          }, item.id);\n        })\n      })\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  backgroundGradient: {\n    flex: 1,\n    justifyContent: 'center'\n  },\n  container: {\n    flexGrow: 1,\n    padding: Dimensions.get('window').width * 0.06\n  },\n  card: {\n    flexDirection: 'row',\n    backgroundColor: '#f9f9f9',\n    borderRadius: 15,\n    marginBottom: Dimensions.get('window').width * 0.06,\n    padding: Dimensions.get('window').width * 0.04,\n    borderWidth: 1,\n    borderColor: '#ccc'\n  },\n  leftColumn: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginRight: Dimensions.get('window').width * 0.04\n  },\n  logo: {\n    width: Dimensions.get('window').width * 0.23,\n    height: Dimensions.get('window').width * 0.23,\n    borderRadius: 42\n  },\n  rightColumn: {\n    flex: 1\n  },\n  title: {\n    fontWeight: 'bold',\n    fontSize: 16,\n    marginBottom: Dimensions.get('window').width * 0.02\n  },\n  description: {\n    fontSize: 14,\n    color: '#888'\n  },\n  image: {\n    width: 'auto',\n    height: Dimensions.get('window').width * 0.08,\n    borderRadius: 1,\n    marginTop: 10\n  }\n});\nexport default TourismDetailsScreen;","map":{"version":3,"names":["React","View","Text","StyleSheet","Image","ScrollView","TouchableOpacity","Dimensions","useNavigation","LinearGradient","jsx","_jsx","jsxs","_jsxs","data","id","title","description","imageUrl","require","logoUrl","screen","TourismDetailsScreen","navigation","handleCardPress","navigate","colors","style","styles","backgroundGradient","children","container","contentContainerStyle","scrollContainer","map","item","card","onPress","leftColumn","source","logo","rightColumn","image","resizeMode","create","flex","justifyContent","flexGrow","padding","get","width","flexDirection","backgroundColor","borderRadius","marginBottom","borderWidth","borderColor","alignItems","marginRight","height","fontWeight","fontSize","color","marginTop"],"sources":["C:/Users/thiago.attico/source/repos/conecta/TourismDetailsScreen.js"],"sourcesContent":["import * as React from 'react';\r\nimport { View, Text, StyleSheet, Image, ScrollView, TouchableOpacity, Dimensions } from 'react-native';\r\nimport { useNavigation } from '@react-navigation/native';\r\nimport { LinearGradient } from 'expo-linear-gradient';\r\n\r\nconst data = [\r\n  {\r\n    id: 1,\r\n    title: 'Castilho - SP',\r\n    description: 'Descrição Castilho',\r\n    imageUrl: require('./assets/images/comerc.png'),\r\n    logoUrl: require('./assets/images/castilho.jpg'),\r\n    screen: 'DetalhesCastilho',\r\n  },\r\n  {\r\n    id: 2,\r\n    title: 'São Paulo - SP',\r\n    description: 'Descrição São Paulo',\r\n    imageUrl: require('./assets/images/comerc.png'),\r\n    logoUrl: require('./assets/images/saopaulo.jpg'),\r\n    screen: 'DetalhesSaoPaulo', \r\n  },\r\n];\r\n\r\nexport function TourismDetailsScreen() {\r\n  const navigation = useNavigation();\r\n\r\n  const handleCardPress = (screen) => {\r\n    navigation.navigate(screen);\r\n  };\r\n\r\n    /*const GradientBackground = () => (\r\n    <Svg height=\"100%\" width=\"100%\">\r\n      <LinearGradient id=\"grad\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"0%\">\r\n        <Stop offset=\"0%\" stopColor=\"#003293\" />\r\n        <Stop offset=\"50%\" stopColor=\"#00134d\" />\r\n        <Stop offset=\"100%\" stopColor=\"#3f1048\" />\r\n      </LinearGradient>\r\n      <Rect x=\"0\" y=\"0\" width=\"100%\" height=\"100%\" fill=\"url(#grad)\" />\r\n    </Svg>\r\n    );*/\r\n  //}\r\n\r\n  return (\r\n    <LinearGradient\r\n      colors={['#003293', '#00134d', '#3f1048']}\r\n      style={styles.backgroundGradient}\r\n    >\r\n    <View style={styles.container}>\r\n      {/*<GradientBackground />*/}\r\n      <ScrollView contentContainerStyle={styles.scrollContainer}>\r\n        {data.map((item) => (\r\n          <TouchableOpacity\r\n            key={item.id}\r\n            style={styles.card}\r\n            onPress={() => handleCardPress(item.screen)}\r\n          >\r\n            <View style={styles.leftColumn}>\r\n              <Image source={item.logoUrl} style={styles.logo} />\r\n            </View>\r\n            <View style={styles.rightColumn}>\r\n              <Text style={styles.title}>{item.title}</Text>\r\n              <Image source={item.imageUrl} style={styles.image} resizeMode=\"contain\" />\r\n            </View>\r\n          </TouchableOpacity>\r\n        ))}\r\n      </ScrollView>\r\n    </View>\r\n    </LinearGradient>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  backgroundGradient: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n  },\r\n  container: {\r\n    flexGrow: 1,\r\n    padding: Dimensions.get('window').width * 0.06,\r\n  },\r\n  card: {\r\n    flexDirection: 'row',\r\n    backgroundColor: '#f9f9f9',\r\n    borderRadius: 15,\r\n    marginBottom: Dimensions.get('window').width * 0.06, \r\n    padding: Dimensions.get('window').width * 0.04, \r\n    borderWidth: 1,\r\n    borderColor: '#ccc',\r\n  },\r\n  leftColumn: {\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    marginRight: Dimensions.get('window').width * 0.04,\r\n  },\r\n  logo: {\r\n    width: Dimensions.get('window').width * 0.23,\r\n    height: Dimensions.get('window').width * 0.23,\r\n    borderRadius: 42,\r\n  },\r\n  rightColumn: {\r\n    flex: 1,\r\n  },\r\n  title: {\r\n    fontWeight: 'bold',\r\n    fontSize: 16,\r\n    marginBottom: Dimensions.get('window').width * 0.02,\r\n  },\r\n  description: {\r\n    fontSize: 14,\r\n    color: '#888',\r\n  },\r\n  image: {\r\n    width: 'auto',\r\n    height: Dimensions.get('window').width * 0.08,\r\n    borderRadius: 1,\r\n    marginTop: 10,\r\n  },\r\n});\r\n\r\nexport default TourismDetailsScreen;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}