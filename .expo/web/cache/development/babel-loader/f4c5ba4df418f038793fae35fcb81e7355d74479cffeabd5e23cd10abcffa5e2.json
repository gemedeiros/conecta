{"ast":null,"code":"import * as React from 'react';\nconst MULTIPLE_NAVIGATOR_ERROR = `Another navigator is already registered for this container. You likely have multiple navigators under a single \"NavigationContainer\" or \"Screen\". Make sure each navigator is under a separate \"Screen\" container. See https://reactnavigation.org/docs/nesting-navigators for a guide on nesting.`;\nexport const SingleNavigatorContext = React.createContext(undefined);\nexport default function EnsureSingleNavigator(_ref) {\n  let {\n    children\n  } = _ref;\n  const navigatorKeyRef = React.useRef();\n  const value = React.useMemo(() => ({\n    register(key) {\n      const currentKey = navigatorKeyRef.current;\n      if (currentKey !== undefined && key !== currentKey) {\n        throw new Error(MULTIPLE_NAVIGATOR_ERROR);\n      }\n      navigatorKeyRef.current = key;\n    },\n    unregister(key) {\n      const currentKey = navigatorKeyRef.current;\n      if (key !== currentKey) {\n        return;\n      }\n      navigatorKeyRef.current = undefined;\n    }\n  }), []);\n  return React.createElement(SingleNavigatorContext.Provider, {\n    value: value\n  }, children);\n}","map":{"version":3,"names":["React","MULTIPLE_NAVIGATOR_ERROR","SingleNavigatorContext","createContext","undefined","EnsureSingleNavigator","_ref","children","navigatorKeyRef","useRef","value","useMemo","register","key","currentKey","current","Error","unregister","createElement","Provider"],"sources":["C:\\Users\\thiago.attico\\source\\repos\\conecta\\node_modules\\@react-navigation\\core\\src\\EnsureSingleNavigator.tsx"],"sourcesContent":["import * as React from 'react';\r\n\r\ntype Props = {\r\n  children: React.ReactNode;\r\n};\r\n\r\nconst MULTIPLE_NAVIGATOR_ERROR = `Another navigator is already registered for this container. You likely have multiple navigators under a single \"NavigationContainer\" or \"Screen\". Make sure each navigator is under a separate \"Screen\" container. See https://reactnavigation.org/docs/nesting-navigators for a guide on nesting.`;\r\n\r\nexport const SingleNavigatorContext = React.createContext<\r\n  | {\r\n      register(key: string): void;\r\n      unregister(key: string): void;\r\n    }\r\n  | undefined\r\n>(undefined);\r\n\r\n/**\r\n * Component which ensures that there's only one navigator nested under it.\r\n */\r\nexport default function EnsureSingleNavigator({ children }: Props) {\r\n  const navigatorKeyRef = React.useRef<string | undefined>();\r\n\r\n  const value = React.useMemo(\r\n    () => ({\r\n      register(key: string) {\r\n        const currentKey = navigatorKeyRef.current;\r\n\r\n        if (currentKey !== undefined && key !== currentKey) {\r\n          throw new Error(MULTIPLE_NAVIGATOR_ERROR);\r\n        }\r\n\r\n        navigatorKeyRef.current = key;\r\n      },\r\n      unregister(key: string) {\r\n        const currentKey = navigatorKeyRef.current;\r\n\r\n        if (key !== currentKey) {\r\n          return;\r\n        }\r\n\r\n        navigatorKeyRef.current = undefined;\r\n      },\r\n    }),\r\n    []\r\n  );\r\n\r\n  return (\r\n    <SingleNavigatorContext.Provider value={value}>\r\n      {children}\r\n    </SingleNavigatorContext.Provider>\r\n  );\r\n}\r\n"],"mappings":"AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAM9B,MAAMC,wBAAwB,GAAI,oSAAmS;AAErU,OAAO,MAAMC,sBAAsB,GAAGF,KAAK,CAACG,aAAa,CAMvDC,SAAS,CAAC;AAKZ,eAAe,SAASC,qBAAqBA,CAAAC,IAAA,EAAsB;EAAA,IAArB;IAAEC;EAAgB,CAAC,GAAAD,IAAA;EAC/D,MAAME,eAAe,GAAGR,KAAK,CAACS,MAAM,EAAsB;EAE1D,MAAMC,KAAK,GAAGV,KAAK,CAACW,OAAO,CACzB,OAAO;IACLC,QAAQA,CAACC,GAAW,EAAE;MACpB,MAAMC,UAAU,GAAGN,eAAe,CAACO,OAAO;MAE1C,IAAID,UAAU,KAAKV,SAAS,IAAIS,GAAG,KAAKC,UAAU,EAAE;QAClD,MAAM,IAAIE,KAAK,CAACf,wBAAwB,CAAC;MAC3C;MAEAO,eAAe,CAACO,OAAO,GAAGF,GAAG;IAC/B,CAAC;IACDI,UAAUA,CAACJ,GAAW,EAAE;MACtB,MAAMC,UAAU,GAAGN,eAAe,CAACO,OAAO;MAE1C,IAAIF,GAAG,KAAKC,UAAU,EAAE;QACtB;MACF;MAEAN,eAAe,CAACO,OAAO,GAAGX,SAAS;IACrC;EACF,CAAC,CAAC,EACF,EAAE,CACH;EAED,OACEJ,KAAA,CAAAkB,aAAA,CAAChB,sBAAsB,CAACiB,QAAQ;IAACT,KAAK,EAAEA;EAAM,GAC3CH,QAAQ,CACuB;AAEtC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}