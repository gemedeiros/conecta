{"ast":null,"code":"export default class EventEmitter {\n  constructor() {\n    this._registry = {};\n  }\n  addListener(eventType, listener, context) {\n    var registrations = allocate(this._registry, eventType);\n    var registration = {\n      context,\n      listener,\n      remove() {\n        registrations.delete(registration);\n      }\n    };\n    registrations.add(registration);\n    return registration;\n  }\n  emit(eventType) {\n    var registrations = this._registry[eventType];\n    if (registrations != null) {\n      for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        args[_key - 1] = arguments[_key];\n      }\n      for (var _i = 0, _arr = [...registrations]; _i < _arr.length; _i++) {\n        var registration = _arr[_i];\n        registration.listener.apply(registration.context, args);\n      }\n    }\n  }\n  removeAllListeners(eventType) {\n    if (eventType == null) {\n      this._registry = {};\n    } else {\n      delete this._registry[eventType];\n    }\n  }\n  listenerCount(eventType) {\n    var registrations = this._registry[eventType];\n    return registrations == null ? 0 : registrations.size;\n  }\n}\nfunction allocate(registry, eventType) {\n  var registrations = registry[eventType];\n  if (registrations == null) {\n    registrations = new Set();\n    registry[eventType] = registrations;\n  }\n  return registrations;\n}","map":{"version":3,"names":["EventEmitter","constructor","_registry","addListener","eventType","listener","context","registrations","allocate","registration","remove","delete","add","emit","_len","arguments","length","args","Array","_key","_i","_arr","apply","removeAllListeners","listenerCount","size","registry","Set"],"sources":["C:/Users/thiago.attico/source/repos/conecta/node_modules/react-native-web/dist/vendor/react-native/vendor/emitter/EventEmitter.js"],"sourcesContent":["/**\r\n * Copyright (c) Meta Platforms, Inc. and affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * \r\n * @format\r\n */\r\n\r\n/**\r\n * EventEmitter manages listeners and publishes events to them.\r\n *\r\n * EventEmitter accepts a single type parameter that defines the valid events\r\n * and associated listener argument(s).\r\n *\r\n * @example\r\n *\r\n *   const emitter = new EventEmitter<{\r\n *     success: [number, string],\r\n *     error: [Error],\r\n *   }>();\r\n *\r\n *   emitter.on('success', (statusCode, responseText) => {...});\r\n *   emitter.emit('success', 200, '...');\r\n *\r\n *   emitter.on('error', error => {...});\r\n *   emitter.emit('error', new Error('Resource not found'));\r\n *\r\n */\r\nexport default class EventEmitter {\r\n  constructor() {\r\n    this._registry = {};\r\n  }\r\n  /**\r\n   * Registers a listener that is called when the supplied event is emitted.\r\n   * Returns a subscription that has a `remove` method to undo registration.\r\n   */\r\n  addListener(eventType, listener, context) {\r\n    var registrations = allocate(this._registry, eventType);\r\n    var registration = {\r\n      context,\r\n      listener,\r\n      remove() {\r\n        registrations.delete(registration);\r\n      }\r\n    };\r\n    registrations.add(registration);\r\n    return registration;\r\n  }\r\n\r\n  /**\r\n   * Emits the supplied event. Additional arguments supplied to `emit` will be\r\n   * passed through to each of the registered listeners.\r\n   *\r\n   * If a listener modifies the listeners registered for the same event, those\r\n   * changes will not be reflected in the current invocation of `emit`.\r\n   */\r\n  emit(eventType) {\r\n    var registrations = this._registry[eventType];\r\n    if (registrations != null) {\r\n      for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\r\n        args[_key - 1] = arguments[_key];\r\n      }\r\n      for (var _i = 0, _arr = [...registrations]; _i < _arr.length; _i++) {\r\n        var registration = _arr[_i];\r\n        registration.listener.apply(registration.context, args);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Removes all registered listeners.\r\n   */\r\n  removeAllListeners(eventType) {\r\n    if (eventType == null) {\r\n      this._registry = {};\r\n    } else {\r\n      delete this._registry[eventType];\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Returns the number of registered listeners for the supplied event.\r\n   */\r\n  listenerCount(eventType) {\r\n    var registrations = this._registry[eventType];\r\n    return registrations == null ? 0 : registrations.size;\r\n  }\r\n}\r\nfunction allocate(registry, eventType) {\r\n  var registrations = registry[eventType];\r\n  if (registrations == null) {\r\n    registrations = new Set();\r\n    registry[eventType] = registrations;\r\n  }\r\n  return registrations;\r\n}"],"mappings":"AA8BA,eAAe,MAAMA,YAAY,CAAC;EAChCC,WAAWA,CAAA,EAAG;IACZ,IAAI,CAACC,SAAS,GAAG,CAAC,CAAC;EACrB;EAKAC,WAAWA,CAACC,SAAS,EAAEC,QAAQ,EAAEC,OAAO,EAAE;IACxC,IAAIC,aAAa,GAAGC,QAAQ,CAAC,IAAI,CAACN,SAAS,EAAEE,SAAS,CAAC;IACvD,IAAIK,YAAY,GAAG;MACjBH,OAAO;MACPD,QAAQ;MACRK,MAAMA,CAAA,EAAG;QACPH,aAAa,CAACI,MAAM,CAACF,YAAY,CAAC;MACpC;IACF,CAAC;IACDF,aAAa,CAACK,GAAG,CAACH,YAAY,CAAC;IAC/B,OAAOA,YAAY;EACrB;EASAI,IAAIA,CAACT,SAAS,EAAE;IACd,IAAIG,aAAa,GAAG,IAAI,CAACL,SAAS,CAACE,SAAS,CAAC;IAC7C,IAAIG,aAAa,IAAI,IAAI,EAAE;MACzB,KAAK,IAAIO,IAAI,GAAGC,SAAS,CAACC,MAAM,EAAEC,IAAI,GAAG,IAAIC,KAAK,CAACJ,IAAI,GAAG,CAAC,GAAGA,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC,EAAEK,IAAI,GAAG,CAAC,EAAEA,IAAI,GAAGL,IAAI,EAAEK,IAAI,EAAE,EAAE;QAC1GF,IAAI,CAACE,IAAI,GAAG,CAAC,CAAC,GAAGJ,SAAS,CAACI,IAAI,CAAC;MAClC;MACA,KAAK,IAAIC,EAAE,GAAG,CAAC,EAAEC,IAAI,GAAG,CAAC,GAAGd,aAAa,CAAC,EAAEa,EAAE,GAAGC,IAAI,CAACL,MAAM,EAAEI,EAAE,EAAE,EAAE;QAClE,IAAIX,YAAY,GAAGY,IAAI,CAACD,EAAE,CAAC;QAC3BX,YAAY,CAACJ,QAAQ,CAACiB,KAAK,CAACb,YAAY,CAACH,OAAO,EAAEW,IAAI,CAAC;MACzD;IACF;EACF;EAKAM,kBAAkBA,CAACnB,SAAS,EAAE;IAC5B,IAAIA,SAAS,IAAI,IAAI,EAAE;MACrB,IAAI,CAACF,SAAS,GAAG,CAAC,CAAC;IACrB,CAAC,MAAM;MACL,OAAO,IAAI,CAACA,SAAS,CAACE,SAAS,CAAC;IAClC;EACF;EAKAoB,aAAaA,CAACpB,SAAS,EAAE;IACvB,IAAIG,aAAa,GAAG,IAAI,CAACL,SAAS,CAACE,SAAS,CAAC;IAC7C,OAAOG,aAAa,IAAI,IAAI,GAAG,CAAC,GAAGA,aAAa,CAACkB,IAAI;EACvD;AACF;AACA,SAASjB,QAAQA,CAACkB,QAAQ,EAAEtB,SAAS,EAAE;EACrC,IAAIG,aAAa,GAAGmB,QAAQ,CAACtB,SAAS,CAAC;EACvC,IAAIG,aAAa,IAAI,IAAI,EAAE;IACzBA,aAAa,GAAG,IAAIoB,GAAG,CAAC,CAAC;IACzBD,QAAQ,CAACtB,SAAS,CAAC,GAAGG,aAAa;EACrC;EACA,OAAOA,aAAa;AACtB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}