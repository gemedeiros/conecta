{"ast":null,"code":"import * as React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nconst CSSTransitions = {\n  WebkitTransition: 'webkitTransitionEnd',\n  Transition: 'transitionEnd',\n  MozTransition: 'transitionend',\n  MSTransition: 'msTransitionEnd',\n  OTransition: 'oTransitionEnd'\n};\nexport function NativeSafeAreaProvider(_ref) {\n  let {\n    children,\n    style,\n    onInsetsChange\n  } = _ref;\n  React.useEffect(() => {\n    if (typeof document === 'undefined') {\n      return;\n    }\n    const element = createContextElement();\n    document.body.appendChild(element);\n    const onEnd = () => {\n      const {\n        paddingTop,\n        paddingBottom,\n        paddingLeft,\n        paddingRight\n      } = window.getComputedStyle(element);\n      const insets = {\n        top: paddingTop ? parseInt(paddingTop, 10) : 0,\n        bottom: paddingBottom ? parseInt(paddingBottom, 10) : 0,\n        left: paddingLeft ? parseInt(paddingLeft, 10) : 0,\n        right: paddingRight ? parseInt(paddingRight, 10) : 0\n      };\n      const frame = {\n        x: 0,\n        y: 0,\n        width: document.documentElement.offsetWidth,\n        height: document.documentElement.offsetHeight\n      };\n      onInsetsChange({\n        nativeEvent: {\n          insets,\n          frame\n        }\n      });\n    };\n    element.addEventListener(getSupportedTransitionEvent(), onEnd);\n    onEnd();\n    return () => {\n      document.body.removeChild(element);\n      element.removeEventListener(getSupportedTransitionEvent(), onEnd);\n    };\n  }, [onInsetsChange]);\n  return React.createElement(View, {\n    style: style\n  }, children);\n}\nlet _supportedTransitionEvent = null;\nfunction getSupportedTransitionEvent() {\n  if (_supportedTransitionEvent != null) {\n    return _supportedTransitionEvent;\n  }\n  const element = document.createElement('invalidtype');\n  _supportedTransitionEvent = CSSTransitions.Transition;\n  for (const key in CSSTransitions) {\n    if (element.style[key] !== undefined) {\n      _supportedTransitionEvent = CSSTransitions[key];\n      break;\n    }\n  }\n  return _supportedTransitionEvent;\n}\nlet _supportedEnv = null;\nfunction getSupportedEnv() {\n  if (_supportedEnv !== null) {\n    return _supportedEnv;\n  }\n  const {\n    CSS\n  } = window;\n  if (CSS && CSS.supports && CSS.supports('top: constant(safe-area-inset-top)')) {\n    _supportedEnv = 'constant';\n  } else {\n    _supportedEnv = 'env';\n  }\n  return _supportedEnv;\n}\nfunction getInset(side) {\n  return `${getSupportedEnv()}(safe-area-inset-${side})`;\n}\nfunction createContextElement() {\n  const element = document.createElement('div');\n  const {\n    style\n  } = element;\n  style.position = 'fixed';\n  style.left = '0';\n  style.top = '0';\n  style.width = '0';\n  style.height = '0';\n  style.zIndex = '-1';\n  style.overflow = 'hidden';\n  style.visibility = 'hidden';\n  style.transitionDuration = '0.05s';\n  style.transitionProperty = 'padding';\n  style.transitionDelay = '0s';\n  style.paddingTop = getInset('top');\n  style.paddingBottom = getInset('bottom');\n  style.paddingLeft = getInset('left');\n  style.paddingRight = getInset('right');\n  return element;\n}","map":{"version":3,"names":["React","View","CSSTransitions","WebkitTransition","Transition","MozTransition","MSTransition","OTransition","NativeSafeAreaProvider","_ref","children","style","onInsetsChange","useEffect","document","element","createContextElement","body","appendChild","onEnd","paddingTop","paddingBottom","paddingLeft","paddingRight","window","getComputedStyle","insets","top","parseInt","bottom","left","right","frame","x","y","width","documentElement","offsetWidth","height","offsetHeight","nativeEvent","addEventListener","getSupportedTransitionEvent","removeChild","removeEventListener","createElement","_supportedTransitionEvent","key","undefined","_supportedEnv","getSupportedEnv","CSS","supports","getInset","side","position","zIndex","overflow","visibility","transitionDuration","transitionProperty","transitionDelay"],"sources":["C:\\Users\\thiago.attico\\source\\repos\\conecta\\node_modules\\react-native-safe-area-context\\src\\NativeSafeAreaProvider.web.tsx"],"sourcesContent":["/* eslint-env browser */\r\n\r\nimport * as React from 'react';\r\nimport { View } from 'react-native';\r\nimport type { NativeSafeAreaProviderProps } from './SafeArea.types';\r\n\r\n/**\r\n * TODO:\r\n * Currently insets and frame are based on the window and are not\r\n * relative to the provider view. This is inconsistent with iOS and Android.\r\n * However in most cases if the provider view covers the screen this is not\r\n * an issue.\r\n */\r\n\r\nconst CSSTransitions: Record<string, string> = {\r\n  WebkitTransition: 'webkitTransitionEnd',\r\n  Transition: 'transitionEnd',\r\n  MozTransition: 'transitionend',\r\n  MSTransition: 'msTransitionEnd',\r\n  OTransition: 'oTransitionEnd',\r\n};\r\n\r\nexport function NativeSafeAreaProvider({\r\n  children,\r\n  style,\r\n  onInsetsChange,\r\n}: NativeSafeAreaProviderProps) {\r\n  React.useEffect(() => {\r\n    // Skip for SSR.\r\n    if (typeof document === 'undefined') {\r\n      return;\r\n    }\r\n\r\n    const element = createContextElement();\r\n    document.body.appendChild(element);\r\n    const onEnd = () => {\r\n      const { paddingTop, paddingBottom, paddingLeft, paddingRight } =\r\n        window.getComputedStyle(element);\r\n\r\n      const insets = {\r\n        top: paddingTop ? parseInt(paddingTop, 10) : 0,\r\n        bottom: paddingBottom ? parseInt(paddingBottom, 10) : 0,\r\n        left: paddingLeft ? parseInt(paddingLeft, 10) : 0,\r\n        right: paddingRight ? parseInt(paddingRight, 10) : 0,\r\n      };\r\n      const frame = {\r\n        x: 0,\r\n        y: 0,\r\n        width: document.documentElement.offsetWidth,\r\n        height: document.documentElement.offsetHeight,\r\n      };\r\n      // @ts-ignore: missing properties\r\n      onInsetsChange({ nativeEvent: { insets, frame } });\r\n    };\r\n    element.addEventListener(getSupportedTransitionEvent(), onEnd);\r\n    onEnd();\r\n    return () => {\r\n      document.body.removeChild(element);\r\n      element.removeEventListener(getSupportedTransitionEvent(), onEnd);\r\n    };\r\n  }, [onInsetsChange]);\r\n\r\n  return <View style={style}>{children}</View>;\r\n}\r\n\r\nlet _supportedTransitionEvent: string | null | undefined = null;\r\nfunction getSupportedTransitionEvent(): string {\r\n  if (_supportedTransitionEvent != null) {\r\n    return _supportedTransitionEvent;\r\n  }\r\n  const element = document.createElement('invalidtype');\r\n\r\n  _supportedTransitionEvent = CSSTransitions.Transition;\r\n  for (const key in CSSTransitions) {\r\n    if (element.style[key as keyof CSSStyleDeclaration] !== undefined) {\r\n      _supportedTransitionEvent = CSSTransitions[key];\r\n      break;\r\n    }\r\n  }\r\n  return _supportedTransitionEvent as string;\r\n}\r\n\r\ntype CssEnv = 'constant' | 'env';\r\n\r\nlet _supportedEnv: CssEnv | null = null;\r\nfunction getSupportedEnv(): CssEnv {\r\n  if (_supportedEnv !== null) {\r\n    return _supportedEnv;\r\n  }\r\n  const { CSS } = window;\r\n  if (\r\n    CSS &&\r\n    CSS.supports &&\r\n    CSS.supports('top: constant(safe-area-inset-top)')\r\n  ) {\r\n    _supportedEnv = 'constant';\r\n  } else {\r\n    _supportedEnv = 'env';\r\n  }\r\n  return _supportedEnv;\r\n}\r\n\r\nfunction getInset(side: string): string {\r\n  return `${getSupportedEnv()}(safe-area-inset-${side})`;\r\n}\r\n\r\nfunction createContextElement(): HTMLElement {\r\n  const element = document.createElement('div');\r\n  const { style } = element;\r\n  style.position = 'fixed';\r\n  style.left = '0';\r\n  style.top = '0';\r\n  style.width = '0';\r\n  style.height = '0';\r\n  style.zIndex = '-1';\r\n  style.overflow = 'hidden';\r\n  style.visibility = 'hidden';\r\n  // Bacon: Anything faster than this and the callback will be invoked too early with the wrong insets\r\n  style.transitionDuration = '0.05s';\r\n  style.transitionProperty = 'padding';\r\n  style.transitionDelay = '0s';\r\n  style.paddingTop = getInset('top');\r\n  style.paddingBottom = getInset('bottom');\r\n  style.paddingLeft = getInset('left');\r\n  style.paddingRight = getInset('right');\r\n  return element;\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}