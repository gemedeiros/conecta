{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport * as React from 'react';\nimport isArrayEqual from './isArrayEqual';\nimport NavigationBuilderContext from './NavigationBuilderContext';\nimport NavigationRouteContext from './NavigationRouteContext';\nexport default function useOnGetState(_ref) {\n  let {\n    getState,\n    getStateListeners\n  } = _ref;\n  const {\n    addKeyedListener\n  } = React.useContext(NavigationBuilderContext);\n  const route = React.useContext(NavigationRouteContext);\n  const key = route ? route.key : 'root';\n  const getRehydratedState = React.useCallback(() => {\n    const state = getState();\n    const routes = state.routes.map(route => {\n      var _getStateListeners$ro;\n      const childState = (_getStateListeners$ro = getStateListeners[route.key]) === null || _getStateListeners$ro === void 0 ? void 0 : _getStateListeners$ro.call(getStateListeners);\n      if (route.state === childState) {\n        return route;\n      }\n      return _objectSpread(_objectSpread({}, route), {}, {\n        state: childState\n      });\n    });\n    if (isArrayEqual(state.routes, routes)) {\n      return state;\n    }\n    return _objectSpread(_objectSpread({}, state), {}, {\n      routes\n    });\n  }, [getState, getStateListeners]);\n  React.useEffect(() => {\n    return addKeyedListener === null || addKeyedListener === void 0 ? void 0 : addKeyedListener('getState', key, getRehydratedState);\n  }, [addKeyedListener, getRehydratedState, key]);\n}","map":{"version":3,"names":["React","isArrayEqual","NavigationBuilderContext","NavigationRouteContext","useOnGetState","_ref","getState","getStateListeners","addKeyedListener","useContext","route","key","getRehydratedState","useCallback","state","routes","map","_getStateListeners$ro","childState","call","_objectSpread","useEffect"],"sources":["C:\\Users\\thiago.attico\\source\\repos\\conecta\\node_modules\\@react-navigation\\core\\src\\useOnGetState.tsx"],"sourcesContent":["import type { NavigationState } from '@react-navigation/routers';\r\nimport * as React from 'react';\r\n\r\nimport isArrayEqual from './isArrayEqual';\r\nimport NavigationBuilderContext, {\r\n  GetStateListener,\r\n} from './NavigationBuilderContext';\r\nimport NavigationRouteContext from './NavigationRouteContext';\r\n\r\ntype Options = {\r\n  getState: () => NavigationState;\r\n  getStateListeners: Record<string, GetStateListener | undefined>;\r\n};\r\n\r\nexport default function useOnGetState({\r\n  getState,\r\n  getStateListeners,\r\n}: Options) {\r\n  const { addKeyedListener } = React.useContext(NavigationBuilderContext);\r\n  const route = React.useContext(NavigationRouteContext);\r\n  const key = route ? route.key : 'root';\r\n\r\n  const getRehydratedState = React.useCallback(() => {\r\n    const state = getState();\r\n\r\n    // Avoid returning new route objects if we don't need to\r\n    const routes = state.routes.map((route) => {\r\n      const childState = getStateListeners[route.key]?.();\r\n\r\n      if (route.state === childState) {\r\n        return route;\r\n      }\r\n\r\n      return { ...route, state: childState };\r\n    });\r\n\r\n    if (isArrayEqual(state.routes, routes)) {\r\n      return state;\r\n    }\r\n\r\n    return { ...state, routes };\r\n  }, [getState, getStateListeners]);\r\n\r\n  React.useEffect(() => {\r\n    return addKeyedListener?.('getState', key, getRehydratedState);\r\n  }, [addKeyedListener, getRehydratedState, key]);\r\n}\r\n"],"mappings":";;;AACA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAE9B,OAAOC,YAAY,MAAM,gBAAgB;AACzC,OAAOC,wBAAwB,MAExB,4BAA4B;AACnC,OAAOC,sBAAsB,MAAM,0BAA0B;AAO7D,eAAe,SAASC,aAAaA,CAAAC,IAAA,EAGzB;EAAA,IAH0B;IACpCC,QAAQ;IACRC;EACO,CAAC,GAAAF,IAAA;EACR,MAAM;IAAEG;EAAiB,CAAC,GAAGR,KAAK,CAACS,UAAU,CAACP,wBAAwB,CAAC;EACvE,MAAMQ,KAAK,GAAGV,KAAK,CAACS,UAAU,CAACN,sBAAsB,CAAC;EACtD,MAAMQ,GAAG,GAAGD,KAAK,GAAGA,KAAK,CAACC,GAAG,GAAG,MAAM;EAEtC,MAAMC,kBAAkB,GAAGZ,KAAK,CAACa,WAAW,CAAC,MAAM;IACjD,MAAMC,KAAK,GAAGR,QAAQ,EAAE;IAGxB,MAAMS,MAAM,GAAGD,KAAK,CAACC,MAAM,CAACC,GAAG,CAAEN,KAAK,IAAK;MAAA,IAAAO,qBAAA;MACzC,MAAMC,UAAU,IAAAD,qBAAA,GAAGV,iBAAiB,CAACG,KAAK,CAACC,GAAG,CAAC,cAAAM,qBAAA,uBAA5BA,qBAAA,CAAAE,IAAA,CAAAZ,iBAAiB,CAAe;MAEnD,IAAIG,KAAK,CAACI,KAAK,KAAKI,UAAU,EAAE;QAC9B,OAAOR,KAAK;MACd;MAEA,OAAAU,aAAA,CAAAA,aAAA,KAAYV,KAAK;QAAEI,KAAK,EAAEI;MAAA;IAC5B,CAAC,CAAC;IAEF,IAAIjB,YAAY,CAACa,KAAK,CAACC,MAAM,EAAEA,MAAM,CAAC,EAAE;MACtC,OAAOD,KAAK;IACd;IAEA,OAAAM,aAAA,CAAAA,aAAA,KAAYN,KAAK;MAAEC;IAAA;EACrB,CAAC,EAAE,CAACT,QAAQ,EAAEC,iBAAiB,CAAC,CAAC;EAEjCP,KAAK,CAACqB,SAAS,CAAC,MAAM;IACpB,OAAOb,gBAAgB,aAAhBA,gBAAgB,uBAAhBA,gBAAgB,CAAG,UAAU,EAAEG,GAAG,EAAEC,kBAAkB,CAAC;EAChE,CAAC,EAAE,CAACJ,gBAAgB,EAAEI,kBAAkB,EAAED,GAAG,CAAC,CAAC;AACjD","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}