{"ast":null,"code":"import * as React from 'react';\nexport default function useDocumentTitle(ref) {\n  let {\n    enabled = true,\n    formatter = (options, route) => (options === null || options === void 0 ? void 0 : options.title) ?? (route === null || route === void 0 ? void 0 : route.name)\n  } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  React.useEffect(() => {\n    if (!enabled) {\n      return;\n    }\n    const navigation = ref.current;\n    if (navigation) {\n      const title = formatter(navigation.getCurrentOptions(), navigation.getCurrentRoute());\n      document.title = title;\n    }\n    return navigation === null || navigation === void 0 ? void 0 : navigation.addListener('options', e => {\n      const title = formatter(e.data.options, navigation === null || navigation === void 0 ? void 0 : navigation.getCurrentRoute());\n      document.title = title;\n    });\n  });\n}","map":{"version":3,"names":["React","useDocumentTitle","ref","enabled","formatter","options","route","title","name","arguments","length","undefined","useEffect","navigation","current","getCurrentOptions","getCurrentRoute","document","addListener","e","data"],"sources":["C:\\Users\\thiago.attico\\source\\repos\\conecta\\node_modules\\@react-navigation\\native\\src\\useDocumentTitle.tsx"],"sourcesContent":["import type {\r\n  NavigationContainerRef,\r\n  ParamListBase,\r\n} from '@react-navigation/core';\r\nimport * as React from 'react';\r\n\r\nimport type { DocumentTitleOptions } from './types';\r\n\r\n/**\r\n * Set the document title for the active screen\r\n */\r\nexport default function useDocumentTitle(\r\n  ref: React.RefObject<NavigationContainerRef<ParamListBase>>,\r\n  {\r\n    enabled = true,\r\n    formatter = (options, route) => options?.title ?? route?.name,\r\n  }: DocumentTitleOptions = {}\r\n) {\r\n  React.useEffect(() => {\r\n    if (!enabled) {\r\n      return;\r\n    }\r\n\r\n    const navigation = ref.current;\r\n\r\n    if (navigation) {\r\n      const title = formatter(\r\n        navigation.getCurrentOptions(),\r\n        navigation.getCurrentRoute()\r\n      );\r\n\r\n      document.title = title;\r\n    }\r\n\r\n    return navigation?.addListener('options', (e) => {\r\n      const title = formatter(e.data.options, navigation?.getCurrentRoute());\r\n\r\n      document.title = title;\r\n    });\r\n  });\r\n}\r\n"],"mappings":"AAIA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAO9B,eAAe,SAASC,gBAAgBA,CACtCC,GAA2D,EAK3D;EAAA,IAJA;IACEC,OAAO,GAAG,IAAI;IACdC,SAAS,GAAGA,CAACC,OAAO,EAAEC,KAAK,KAAK,CAAAD,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAEE,KAAK,MAAID,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEE,IAAI;EACzC,CAAC,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,CAAC,CAAC;EAE5BT,KAAK,CAACY,SAAS,CAAC,MAAM;IACpB,IAAI,CAACT,OAAO,EAAE;MACZ;IACF;IAEA,MAAMU,UAAU,GAAGX,GAAG,CAACY,OAAO;IAE9B,IAAID,UAAU,EAAE;MACd,MAAMN,KAAK,GAAGH,SAAS,CACrBS,UAAU,CAACE,iBAAiB,EAAE,EAC9BF,UAAU,CAACG,eAAe,EAAE,CAC7B;MAEDC,QAAQ,CAACV,KAAK,GAAGA,KAAK;IACxB;IAEA,OAAOM,UAAU,aAAVA,UAAU,uBAAVA,UAAU,CAAEK,WAAW,CAAC,SAAS,EAAGC,CAAC,IAAK;MAC/C,MAAMZ,KAAK,GAAGH,SAAS,CAACe,CAAC,CAACC,IAAI,CAACf,OAAO,EAAEQ,UAAU,aAAVA,UAAU,uBAAVA,UAAU,CAAEG,eAAe,EAAE,CAAC;MAEtEC,QAAQ,CAACV,KAAK,GAAGA,KAAK;IACxB,CAAC,CAAC;EACJ,CAAC,CAAC;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}